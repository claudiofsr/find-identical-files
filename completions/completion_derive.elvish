
use builtin;
use str;

set edit:completion:arg-completer[find_duplicate_files] = {|@words|
    fn spaces {|n|
        builtin:repeat $n ' ' | str:join ''
    }
    fn cand {|text desc|
        edit:complex-candidate $text &display=$text' '(spaces (- 14 (wcswidth $text)))$desc
    }
    var command = 'find_duplicate_files'
    for word $words[1..-1] {
        if (str:has-prefix $word '-') {
            break
        }
        set command = $command';'$word
    }
    var completions = [
        &'find_duplicate_files'= {
            cand -a 'Choose the hash algorithm'
            cand --algorithm 'Choose the hash algorithm'
            cand -g 'If provided, outputs the completion file for given shell'
            cand --generate 'If provided, outputs the completion file for given shell'
            cand -d 'Set the minimum depth to search for duplicate files'
            cand --min_depth 'Set the minimum depth to search for duplicate files'
            cand -D 'Set the maximum depth to search for duplicate files'
            cand --max_depth 'Set the maximum depth to search for duplicate files'
            cand -b 'Set a minimum file size (in bytes) to search for duplicate files'
            cand --min_size 'Set a minimum file size (in bytes) to search for duplicate files'
            cand -B 'Set a maximum file size (in bytes) to search for duplicate files'
            cand --max_size 'Set a maximum file size (in bytes) to search for duplicate files'
            cand -p 'Set the path where to look for duplicate files, otherwise use the current directory'
            cand --path 'Set the path where to look for duplicate files, otherwise use the current directory'
            cand -r 'Print the result in the chosen format'
            cand --result_format 'Print the result in the chosen format'
            cand -c 'Clear the terminal screen before listing the duplicate files'
            cand --clear_terminal 'Clear the terminal screen before listing the duplicate files'
            cand -e 'Export the result to a CSV file (fdf.csv)'
            cand --export_to_csv 'Export the result to a CSV file (fdf.csv)'
            cand -f 'Prints full path of duplicate files, otherwise relative path'
            cand --full_path 'Prints full path of duplicate files, otherwise relative path'
            cand -o 'Omit hidden files (starts with ''.''), otherwise search all files'
            cand --omit_hidden 'Omit hidden files (starts with ''.''), otherwise search all files'
            cand -s 'Sort result by number of duplicate files, otherwise sort by file size'
            cand --sort 'Sort result by number of duplicate files, otherwise sort by file size'
            cand -t 'Show total execution time'
            cand --time 'Show total execution time'
            cand -v 'Show intermediate runtime messages'
            cand --verbose 'Show intermediate runtime messages'
            cand -h 'Print help (see more with ''--help'')'
            cand --help 'Print help (see more with ''--help'')'
            cand -V 'Print version'
            cand --version 'Print version'
        }
    ]
    $completions[$command]
}
